#!/usr/bin/env bash

# Execute from dotfiles directory
cd "$(dirname "$0")"

# Make dotfiles accessible everywhere
export DOTFILES="$(pwd)"
export OS="$(bin/os)"

install_osfiles() {
	local osdir="$DOTFILES/os/$OS"

	# Ask for the administrator password upfront
	sudo -v

	# Keep-alive: update existing `sudo` time stamp until `bootstrap` has finished
	while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

	# Perform OS-specific preparations
	source "$osdir/prepare.sh";

	for type in (binaries apps defaults); do
		user " - do you want to setup $type? (y/n) "
		read -n 1
		echo ""

		if [[ $REPLY =~ ^[Yy]$ ]]; then
			source "$osdir/$type.sh"
		fi
	done

	# Perform OS-specific cleanup
	source "$osdir/cleanup.sh"
}

install_scripts() {
	if [ -z "$NVM_DIR" ]; then
		local nvmpath='~/.nvm/nvm.sh'
		[ -r "$nvmpath" ] && source "$nvmpath"
	fi

	if [ is-command nvm ]; then
		# Initialize NVM using our .noderc
		nvm install
		nvm alias default "$(cat ~/.nvmrc)"

		local npmpackages=(
			coffee-script
			gitjk
			grunt-cli
			jshint
			jsonlint
			less
			uglify-js
		)

		# Install our node packages
		npm install -g "${npackages[@]}"
	fi

	if [ is-command gem ]; then
		# Install our ruby packages
		gem install sass
		gem install github-auth
	fi

	if [ is-command pip ]; then
		pip install patool
		pip install youtube-dl
		pip install flake8
	fi
	sudo cpan Text::Lorem
}

execute() {
	# Add our “bin” directory if not available
	add_path "$DOTFILES/bin"
	add_path "$DOTFILES/os/$OS/bin"

	echo "$DOTFILES" > "$HOME/.dotlock"

	if [ is-command git ]; then
		if [ ! git rev-parse --is-inside-work-tree > /dev/null ^&1 ]; then
			info 'setting up git repository'
			git init
			git remote add origin https://github.com/darfink/dotfiles.git
			git fetch
			git reset --hard origin/master
		else
			info 'ensuring the repository is up to date'
			git pull origin master
		fi
	fi

	if [ ! -e ~/.ssh/id_rsa.pub ]; then
		user " - generating SSH key; please input email: "
		read email

		ssh-keygen -t rsa -C "$email"
	fi

	local force=$1

	install_dotfiles $force
	install_osfiles $force
	install_scripts $force
	install_vimplugins

	# Disable sending LC_* environment variables
	sudo sed -e '/\(LC_\|LANG\)/s/^#*/#/' -i /etc/ssh/ssh_config

	echo "=========================================="
	echo ""
	echo "Installation complete!"
	echo ""
	echo "=========================================="
}

if [ "$1" == "--force" -o "$1" == "-f" ]; then
	execute true
else
	execute false
fi